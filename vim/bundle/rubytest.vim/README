This is a mirror of http://www.vim.org/scripts/script.php?script_id=2612

Rubytest.vim will help you to run ruby test (including vanilla test, rspec, shoulda etc.) in vim.

Installation
------------

Unzip downloaded file and copy rubytest.vim to your ~/.vim/plugin directory.

Usage
-----

After installation, press <Leader>t will run the test under your cursor if you are editing a ruby test file.

example:

$ cd <your rails/merb root>
$ vim test/unit/user_test.rb
(move cursor into a test case, press <Leader>t)

(<Leader> is mapping to '\&#039 by default in vim)

By default, you will see the full result. You can change to use quickfix window by

  let g:rubytest_in_quickfix = 1

in your .vimrc. With this option, only test errors will be shown to you after a test run. You can quick jump to the place where the error raise in source file by moving cursor onto the error message and press return (or ctrl-w return to open a new window and jump).

You can customize the command which will be used to run the test case by settting these options in your vimrc file:

  let g:rubytest_cmd_test = "ruby %p"
  let g:rubytest_cmd_testcase = "ruby %p -n '/%c/'"
  let g:rubytest_cmd_spec = "spec -f specdoc %p"
  let g:rubytest_cmd_example = "spec -f specdoc %p -e '%c'"
  let g:rubytest_cmd_feature = "cucumber %p"
  let g:rubytest_cmd_story = "cucumber %p -n '%c'"

(%p will be replaced by the path of test file, %c will be replaced by the name of test case under cursor)

Default Key Bindings
--------------------

<Leader>t: run test case under cursor
<Leader>T: run all tests in file
<Leader>l: run the last test, from any buffer

You can change default key bindings:

  map <Leader>\ <Plug>RubyTestRun " change from <Leader>t to <Leader>\
  map <Leader>] <Plug>RubyFileRun " change from <Leader>T to <Leader>]
  map <Leader>/ <Plug>RubyTestRunLast " change from <Leader>l to <Leader>/

The latest code is hosted on http://github.com/janx/vim-rubytest/tree/master
